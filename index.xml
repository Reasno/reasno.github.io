<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Garbage Collected</title>
    <link>https://reasno.github.io/</link>
    <description>Recent content on Garbage Collected</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 27 Jun 2019 00:17:13 +0800</lastBuildDate>
    
	<atom:link href="https://reasno.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Beauty of Lazy Execution</title>
      <link>https://reasno.github.io/posts/beauty-of-lazy-execution/</link>
      <pubDate>Thu, 27 Jun 2019 00:17:13 +0800</pubDate>
      
      <guid>https://reasno.github.io/posts/beauty-of-lazy-execution/</guid>
      <description>I have done some quick&amp;rsquo;n&amp;rsquo;dirty bid data processing with Apache Beam in past weeks. As someone who try to stay away from JVM, I am not a big data expert at all. However the working with apache beam is a blast (Using JAVA!). The lazy execution style feels right a home. I love wiring a various component into a topology, and only start processing when data arrives.
I once heard a Haskell fan said that she thought lazy execution was what set Haskell apart from other programing languages.</description>
    </item>
    
    <item>
      <title>Industry on Service Mesh</title>
      <link>https://reasno.github.io/posts/industry-on-service-mesh/</link>
      <pubDate>Mon, 24 Jun 2019 14:11:24 +0800</pubDate>
      
      <guid>https://reasno.github.io/posts/industry-on-service-mesh/</guid>
      <description>Just read a thread in twitter from Matt Klein, where he basically summerized his opinion about complex toolings like service mesh. Though it is not straightforward to me that Matt, the creator of envoy, is actually dissuading people from jumping on the mesh train, his opinion is not really a freshing one. It seems to be a more and more accepted idea that service mesh are not for every body. It solves a domain of problems that only the top of the pyramid would encounter but meanwhile introduces a bunch of other headaches.</description>
    </item>
    
  </channel>
</rss>