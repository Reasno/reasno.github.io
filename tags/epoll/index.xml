<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>epoll on Garbage Collected</title>
    <link>https://guxi.me/tags/epoll/</link>
    <description>Recent content in epoll on Garbage Collected</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 24 Jul 2019 14:15:03 +0800</lastBuildDate>
    
	<atom:link href="https://guxi.me/tags/epoll/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Epoll and Event Loop: Just Enough You Need for Interview</title>
      <link>https://guxi.me/posts/epoll-and-event-loop-just-enough-you-need-for-interview/</link>
      <pubDate>Wed, 24 Jul 2019 14:15:03 +0800</pubDate>
      
      <guid>https://guxi.me/posts/epoll-and-event-loop-just-enough-you-need-for-interview/</guid>
      <description>The biggest challenge for intermediate developers to understand event loop is that the articles found around the web are either written for die-hard C programmers or simply too long to read. I will give a try on explaining the event loop/epoll(), and stop at a point where interviewers will be sufficiently satisfied.
The first thing should be made crystal clear is that things happen on two sides: The kernel and the userspace.</description>
    </item>
    
  </channel>
</rss>