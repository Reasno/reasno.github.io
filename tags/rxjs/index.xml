<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>RxJS on Garbage Collected</title>
    <link>https://guxi.me/tags/rxjs/</link>
    <description>Recent content in RxJS on Garbage Collected</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 11 Jul 2019 07:43:40 +0800</lastBuildDate>
    
	<atom:link href="https://guxi.me/tags/rxjs/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Id Based Throttling</title>
      <link>https://guxi.me/posts/id-based-throttling/</link>
      <pubDate>Thu, 11 Jul 2019 07:43:40 +0800</pubDate>
      
      <guid>https://guxi.me/posts/id-based-throttling/</guid>
      <description>RxJS is bonker!
Imagine you have an unbounded stream of events. Each has a unique id. Now you want to throttle the stream based on id, ie. each id should not appear more often than X minutes.
With RxJS:
// Throttle each id in one minute. fromEvent(emitter, &#39;tick&#39;).pipe( groupBy((ctx: pb.UpsertRequest) =&amp;gt; ctx.getAdId()), flatMap(group =&amp;gt; group.pipe(throttleTime(60 * 1000))), ).subscribe( //Do your stuff );  Without RxJS:
Too much to write.</description>
    </item>
    
    <item>
      <title>Beauty of Lazy Execution</title>
      <link>https://guxi.me/posts/beauty-of-lazy-execution/</link>
      <pubDate>Thu, 27 Jun 2019 00:17:13 +0800</pubDate>
      
      <guid>https://guxi.me/posts/beauty-of-lazy-execution/</guid>
      <description>I have done some quick&amp;rsquo;n&amp;rsquo;dirty bid data processing with Apache Beam in past weeks. As someone who try to stay away from JVM, I am not a big data expert at all. However the working with apache beam is a blast (Using JAVA!). The lazy execution style feels right a home. I love wiring a various component into a topology, and only start processing when data arrives.
I once heard a Haskell fan said that she thought lazy execution was what set Haskell apart from other programing languages.</description>
    </item>
    
  </channel>
</rss>